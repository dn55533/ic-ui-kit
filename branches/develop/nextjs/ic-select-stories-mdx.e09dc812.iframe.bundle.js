"use strict";(self.webpackChunk_ukic_nextjs=self.webpackChunk_ukic_nextjs||[]).push([[2230],{"../react/src/stories/ic-select.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ExternalFiltering:()=>ExternalFiltering,SearchableDefaultValue:()=>SearchableDefaultValue,SearchableFormDefaultValue:()=>SearchableFormDefaultValue,__namedExportsOrder:()=>__namedExportsOrder,customElements:()=>customElements,customPlaceholder:()=>customPlaceholder,default:()=>ic_select_stories,defaultArgs:()=>defaultArgs,defaultSelectPlayground:()=>defaultSelectPlayground,defaultStory:()=>defaultStory,defaultValue:()=>defaultValue,deprecatedSmall:()=>deprecatedSmall,disabled:()=>disabled,disabledOptions:()=>disabledOptions,emittingIcOptionSelectOnEnter:()=>emittingIcOptionSelectOnEnter,fullWidth:()=>fullWidth,groupedOptions:()=>groupedOptions,groups:()=>groups,helperText:()=>helperText,hiddenLabel:()=>hiddenLabel,manyOptions:()=>manyOptions,options:()=>options,optionsWithCustomElements:()=>optionsWithCustomElements,optionsWithDescriptions:()=>optionsWithDescriptions,optionsWithDisabled:()=>optionsWithDisabled,optionsWithRecommended:()=>optionsWithRecommended,playgroundOptions:()=>playgroundOptions,readOnly:()=>readOnly,recommended:()=>recommended,required:()=>required,scrollBehaviour:()=>scrollBehaviour,searchableDefault:()=>searchableDefault,searchableDefaultValue:()=>searchableDefaultValue,searchableDisabled:()=>searchableDisabled,searchableDisabledOptions:()=>searchableDisabledOptions,searchableEmittingIcOptionSelectOnEnter:()=>searchableEmittingIcOptionSelectOnEnter,searchableExternalFiltering:()=>searchableExternalFiltering,searchableFilterByStartOfOptions:()=>searchableFilterByStartOfOptions,searchableFormResetDefaultValue:()=>searchableFormResetDefaultValue,searchableGroups:()=>searchableGroups,searchableGroupsGroupTitlesIncludedInSearch:()=>searchableGroupsGroupTitlesIncludedInSearch,searchableHelperText:()=>searchableHelperText,searchableHiddenLabel:()=>searchableHiddenLabel,searchableManyOptions:()=>searchableManyOptions,searchableOptions:()=>searchableOptions,searchableOptionsWithDescriptions:()=>searchableOptionsWithDescriptions,searchableOptionsWithDisabled:()=>searchableOptionsWithDisabled,searchableOptionsWithRecommended:()=>searchableOptionsWithRecommended,searchableRecommended:()=>searchableRecommended,searchableRequired:()=>searchableRequired,searchableSelectPlayground:()=>searchableSelectPlayground,searchableSmall:()=>searchableSmall,searchableValidation:()=>searchableValidation,searchableWithDescription:()=>searchableWithDescription,searchableWithDescriptionIncludedInSearch:()=>searchableWithDescriptionIncludedInSearch,sizeSmall:()=>sizeSmall,validation:()=>validation,withClearButton:()=>withClearButton,withDescription:()=>withDescription});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../react/node_modules/@storybook/addon-docs/dist/index.mjs"),components=__webpack_require__("../react/src/components.ts");const readme_namespaceObject='# ic-select\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                      | Attribute                        | Description                                                                                                                                                                                                                                                                | Type                                      | Default              |\n| ----------------------------- | -------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | -------------------- |\n| `charactersUntilSuggestions`  | `characters-until-suggestions`   | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore.<br/><br/>                                                                                                                                                                            | `number`                                  | `0`                  |\n| `debounce`                    | `debounce`                       | The amount of time, in milliseconds, to wait to trigger the `icChange` event after each keystroke.                                                                                                                                                                         | `number`                                  | `0`                  |\n| `disableFilter`               | `disable-filter`                 | If `true`, the built in filtering will be disabled for a searchable variant. For example, if options will already be filtered from external source.                                                                                                                        | `boolean`                                 | `false`              |\n| `disabled`                    | `disabled`                       | If `true`, the disabled state will be set.                                                                                                                                                                                                                                 | `boolean`                                 | `false`              |\n| `emptyOptionListText`         | `empty-option-list-text`         | The text displayed when there are no options in the option list.                                                                                                                                                                                                           | `string`                                  | `"No results found"` |\n| `form`                        | `form`                           | The <form> element to associate the select with.                                                                                                                                                                                                                           | `string`                                  | `undefined`          |\n| `formaction`                  | `formaction`                     | The URL that processes the information submitted by the select. It overrides the action attribute of the select\'s form owner. Does nothing if there is no form owner. This prop should only be used with searchable select and will only be applied if searchable is true. | `string`                                  | `undefined`          |\n| `formenctype`                 | `formenctype`                    | The way the submitted form data is encoded. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                                           | `string`                                  | `undefined`          |\n| `formmethod`                  | `formmethod`                     | The HTTP method used to submit the form. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                                              | `string`                                  | `undefined`          |\n| `formnovalidate`              | `formnovalidate`                 | If `true`, the form will not be validated when submitted. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                             | `boolean`                                 | `undefined`          |\n| `formtarget`                  | `formtarget`                     | The place to display the response from submitting the form. It overrides the target attribute of the select\'s form owner. This prop should only be used with searchable select and will only be applied if searchable is true.                                             | `string`                                  | `undefined`          |\n| `fullWidth`                   | `full-width`                     | If `true`, the select element will fill the width of the container. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                   | `boolean`                                 | `false`              |\n| `helperText`                  | `helper-text`                    | The helper text that will be displayed for additional field guidance.                                                                                                                                                                                                      | `string`                                  | `""`                 |\n| `hideLabel`                   | `hide-label`                     | If `true`, the label will be hidden and the required label value will be applied as an aria-label.                                                                                                                                                                         | `boolean`                                 | `false`              |\n| `includeDescriptionsInSearch` | `include-descriptions-in-search` | If `true`, descriptions of options will be included when filtering options in a searchable select. Only applies to built in filtering.                                                                                                                                     | `boolean`                                 | `false`              |\n| `includeGroupTitlesInSearch`  | `include-group-titles-in-search` | If `true`, group titles of grouped options will be included when filtering options in a searchable select. Only applies to built in filtering.                                                                                                                             | `boolean`                                 | `false`              |\n| `label` _(required)_          | `label`                          | The label for the select.                                                                                                                                                                                                                                                  | `string`                                  | `undefined`          |\n| `loading`                     | `loading`                        | If `true`, the loading state will be triggered when fetching options asyncronously.                                                                                                                                                                                        | `boolean`                                 | `false`              |\n| `loadingErrorLabel`           | `loading-error-label`            | The message displayed when external loading times out.                                                                                                                                                                                                                     | `string`                                  | `"Loading Error"`    |\n| `loadingLabel`                | `loading-label`                  | The message displayed whilst the options are being loaded externally.                                                                                                                                                                                                      | `string`                                  | `"Loading..."`       |\n| `name`                        | `name`                           | The name of the control, which is submitted with the form data.                                                                                                                                                                                                            | `string`                                  | `this.inputId`       |\n| `options`                     | --                               | The possible selection options.                                                                                                                                                                                                                                            | `IcMenuOption[]`                          | `[]`                 |\n| `placeholder`                 | `placeholder`                    | The placeholder value to be displayed.                                                                                                                                                                                                                                     | `string`                                  | `"Select an option"` |\n| `readonly`                    | `readonly`                       | If `true`, the readonly state will be set.                                                                                                                                                                                                                                 | `boolean`                                 | `false`              |\n| `required`                    | `required`                       | If `true`, the select will require a value.                                                                                                                                                                                                                                | `boolean`                                 | `false`              |\n| `searchMatchPosition`         | `search-match-position`          | Whether the search string of the searchable select should match the start of or anywhere in the options. Only applies to built in filtering.                                                                                                                               | `"anywhere" \\| "start"`                   | `"anywhere"`         |\n| `searchable`                  | `searchable`                     | If `true`, a searchable variant of the select will be displayed which can be typed in to filter options.                                                                                                                                                                   | `boolean`                                 | `false`              |\n| `selectOnEnter`               | `select-on-enter`                | If `true`, the icOptionSelect event will be fired on enter instead of ArrowUp and ArrowDown.                                                                                                                                                                               | `boolean`                                 | `false`              |\n| `showClearButton`             | `show-clear-button`              | If `true`, a button which clears the select input when clicked will be displayed. The button will always appear on the searchable select.                                                                                                                                  | `boolean`                                 | `false`              |\n| `size`                        | `size`                           | The size of the select component.                                                                                                                                                                                                                                          | `"default" \\| "small"`                    | `"default"`          |\n| `small`                       | `small`                          | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore. Set prop `size` to "small" instead.<br/><br/>                                                                                                                                        | `boolean`                                 | `false`              |\n| `timeout`                     | `timeout`                        | If using external filtering, set a timeout for when loading takes too long.                                                                                                                                                                                                | `number`                                  | `undefined`          |\n| `validationStatus`            | `validation-status`              | The validation status - e.g. \'error\' \\| \'warning\' \\| \'success\'.                                                                                                                                                                                                            | `"" \\| "error" \\| "success" \\| "warning"` | `""`                 |\n| `validationText`              | `validation-text`                | The text to display as the validation message.                                                                                                                                                                                                                             | `string`                                  | `""`                 |\n| `value`                       | `value`                          | The value of the select, reflected by the value of the currently selected option. For the searchable variant, the value is also reflected by the user input.                                                                                                               | `string`                                  | `undefined`          |\n\n\n## Events\n\n| Event            | Description                                                                                                                                                | Type                                     |\n| ---------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------- |\n| `icBlur`         | Emitted when the select loses focus.                                                                                                                       | `CustomEvent<void>`                      |\n| `icChange`       | Emitted when the value changes.                                                                                                                            | `CustomEvent<IcValueEventDetail>`        |\n| `icClear`        | Emitted when the clear button is clicked.                                                                                                                  | `CustomEvent<void>`                      |\n| `icFocus`        | Emitted when the select gains focus.                                                                                                                       | `CustomEvent<void>`                      |\n| `icInput`        | Emitted when a keyboard input occurred.                                                                                                                    | `CustomEvent<IcValueEventDetail>`        |\n| `icOptionSelect` | Emitted when an option is highlighted within the menu. Highlighting a menu item will also trigger an `icChange/onIcChange` due to the value being updated. | `CustomEvent<IcOptionSelectEventDetail>` |\n| `icRetryLoad`    | Emitted when the \'retry loading\' button is clicked for a searchable variant.                                                                               | `CustomEvent<IcValueEventDetail>`        |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the input box.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                | Description              |\n| ------------------- | ------------------------ |\n| `--ic-z-index-menu` | z-index of select menu   |\n| `--input-width`     | Width of the input field |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-input-container](../ic-input-container)\n- [ic-input-label](../ic-input-label)\n- [ic-input-component-container](../ic-input-component-container)\n- [ic-typography](../ic-typography)\n- [ic-button](../ic-button)\n- [ic-menu](../ic-menu)\n- [ic-input-validation](../ic-input-validation)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-select --\x3e ic-input-container\n  ic-select --\x3e ic-input-label\n  ic-select --\x3e ic-input-component-container\n  ic-select --\x3e ic-typography\n  ic-select --\x3e ic-button\n  ic-select --\x3e ic-menu\n  ic-select --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-menu --\x3e ic-loading-indicator\n  ic-menu --\x3e ic-typography\n  ic-menu --\x3e ic-button\n  ic-input-validation --\x3e ic-typography\n  style ic-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");const defaultArgs={disabled:!1,fullWidth:!1,helperText:"Such as Arabica, Robusta or Liberica.",hideLabel:!1,loading:!1,loadingLabel:"Loading...",label:"What is your favourite coffee?",placeholder:"Select an option",readonly:!1,required:!1,small:!1,validationStatus:"",validationText:""},options=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"}],optionsWithDisabled=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat",disabled:!0},{label:"Americano",value:"Ame"}],optionsWithDescriptions=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"}],groupedOptions=[{label:"Fancy",children:[{label:"Cappuccino",value:"Cap"},{label:"Flat white",value:"Flat"}]},{label:"Boring",children:[{label:"Filter",value:"Fil"},{label:"Latte",value:"Lat"}]}],optionsWithRecommended=[{label:"Cappuccino",value:"Cappuccino"},{label:"Flat white",value:"Flat white",recommended:!0},{label:"Latte",value:"Latte"},{label:"Americano",value:"Americano",recommended:!0},{label:"Filter",value:"Fil"}],optionsWithCustomElements=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat",element:{component:'<ic-status-tag label="Neutral status"></ic-status-tag>',ariaLabel:"Neutral status tag"}},{label:"Americano",value:"Ame",icon:'<svg aria-labelledby="warning-title" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000"><g id="warning"><path id="Vector" d="M4.47 20.5037H19.53C21.07 20.5037 22.03 18.8337 21.26 17.5037L13.73 4.49375C12.96 3.16375 11.04 3.16375 10.27 4.49375L2.74 17.5037C1.97 18.8337 2.93 20.5037 4.47 20.5037ZM12 13.5037C11.45 13.5037 11 13.0537 11 12.5037V10.5037C11 9.95375 11.45 9.50375 12 9.50375C12.55 9.50375 13 9.95375 13 10.5037V12.5037C13 13.0537 12.55 13.5037 12 13.5037ZM13 17.5037H11V15.5037H13V17.5037Z" /></g></svg>'}],manyOptions=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"},{label:"Café au lait",value:"Caf"},{label:"Espresso",value:"Esp"},{label:"Cortado",value:"Cor"},{label:"Ristretto",value:"Ris"},{label:"Latte macchiato",value:"Lam"}],searchableOptions=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],searchableOptionsWithDescriptions=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"},{label:"Filter",value:"Fil",description:"Coffee filtered using paper or a mesh"},{label:"Flat white",value:"Fla",description:"Coffee without froth made with espresso and hot steamed milk"},{label:"Mocha",value:"Moc",description:"A mixture of coffee and chocolate"},{label:"Macchiato",value:"Mac",description:"Espresso coffee with a dash of frothy steamed milk"}],searchableOptionsWithDisabled=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame",disabled:!0},{label:"Filter",value:"Fil",disabled:!0},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac",disabled:!0}],searchableOptionsWithRecommended=[{label:"Cappuccino",value:"Cappuccino"},{label:"Flat white",value:"Flat white",recommended:!0},{label:"Latte",value:"Latte"},{label:"Americano",value:"Americano",recommended:!0},{label:"Filter",value:"Fil"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],playgroundOptions=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Boring",children:[{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Filter",value:"Fil",description:"Coffee filtered using paper or a mesh"}]},{label:"Fancy",children:[{label:"Flat white",value:"Fla",description:"Coffee without froth made with espresso and hot steamed milk"},{label:"Macchiato",value:"Mac",description:"Espresso coffee with a dash of frothy steamed milk"}]},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"},{label:"Mocha",value:"Moc",description:"A mixture of coffee and chocolate"}],SearchableDefaultValue=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",required:!0,value:"Cap",options:searchableOptions,onIcChange:e=>console.log(e.detail.value),searchable:!0,showClearButton:!0}),SearchableFormDefaultValue=()=>{const _components=Object.assign({form:"form"},(0,lib.RP)());return(0,jsx_runtime.jsxs)(_components.form,{children:[(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",required:!0,value:"Cap",options:searchableOptions,onIcChange:e=>console.log(e.detail.value),searchable:!0,showClearButton:!0}),(0,jsx_runtime.jsx)(components.nP,{type:"reset",children:"Reset"})]})},ExternalFiltering=()=>{const mockData=[{label:"Espresso",value:"Esp"},{label:"Double Espresso",value:"Dou"},{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],[event,setEvent]=(0,react.useState)(),[selectedValue,setSelectedValue]=(0,react.useState)(null),[results,setResults]=(0,react.useState)([]),[loading,setLoading]=(0,react.useState)(!1);(0,react.useEffect)((()=>{const searchTerm=event?.detail.value;if(searchTerm!==selectedValue)if(searchTerm){setLoading(!0);(query=>{const filteredResults=mockData.filter((m=>m.label.toLowerCase().includes(query.toLowerCase())));return new Promise((resolve=>setTimeout((()=>resolve(filteredResults)),"icChange"===event.type?2e3:500)))})(searchTerm).then((results=>setResults(results)))}else setResults([])}),[event]);const handleChange=event=>{console.log(event.detail.value),setEvent(event)};return(0,jsx_runtime.jsx)(components.xO,{loading,timeout:1e3,debounce:300,label:"What is your favourite coffee?",searchable:!0,disableFilter:!0,options:results,onIcOptionSelect:event=>{setSelectedValue(event.detail.value)},onIcChange:handleChange,onIcRetryLoad:handleChange,onIcClear:()=>{setResults([])}})};function _createMdxContent(props){const _components=Object.assign({h3:"h3",div:"div",p:"p"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Select",component:components.xO}),"\n",(0,jsx_runtime.jsx)(dist.VY,{markdown:readme_namespaceObject}),"\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default-value",children:"Default value"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default value",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-clear-button",children:"With clear button"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"With clear button",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",showClearButton:!0,options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-description",children:"With description"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"With description",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithDescriptions,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"helper-text",children:"Helper text"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Helper text",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",helperText:"Some helper text",options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-placeholder",children:"Custom placeholder"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Custom placeholder",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",placeholder:"Placeholder goes here",options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-elements",children:"Custom elements"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Custom elements",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithCustomElements,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"size-small",children:"Size small"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Size small",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",size:"small",options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"deprecated---small",children:"Deprecated - small"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Deprecated - small",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",small:!0,options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Disabled",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",disabled:!0,options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled-options",children:"Disabled options"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Disabled options",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithDisabled,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"full-width",children:"Full width"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Full width",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",fullWidth:!0,options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"hidden-label",children:"Hidden label"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Hidden label",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",hideLabel:!0,options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"required",children:"Required"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Required",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",required:!0,options,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"read-only",children:"Read-only"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Read-only",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",readonly:!0,options,value:"Cap",onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"groups",children:"Groups"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Groups",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:groupedOptions,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"recommended",children:"Recommended"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Recommended",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithRecommended,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"validation",children:"Validation"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Validation",children:()=>(0,jsx_runtime.jsxs)(_components.div,{children:[(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"success",validationText:"Success message",options,onIcChange:event=>setValue1(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"warning",validationText:"Warning message",options,onIcChange:event=>setValue2(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"error",validationText:"Error message",options,onIcChange:event=>setValue3(event.detail.value)})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"scroll-behaviour",children:"Scroll behaviour"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Scroll behaviour",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:manyOptions,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"emitting-icoptionselect-on-enter",children:"Emitting icOptionSelect on enter"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Emitting icOptionSelect on enter",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,selectOnEnter:!0,onIcOptionSelect:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-default",children:"Searchable default"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable default",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n","\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-default-value",children:"Searchable default value"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable default value",children:()=>(0,jsx_runtime.jsx)(SearchableDefaultValue,{})})}),"\n","\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-form-reset-default-value",children:"Searchable Form reset default value"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable form reset default value",children:()=>(0,jsx_runtime.jsx)(SearchableFormDefaultValue,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-filter-by-start-of-options",children:"Searchable filter by start of options"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable filter by start of options",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,filterMatchPosition:"start",onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-with-description",children:"Searchable with description"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable with description",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithDescriptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-with-description-included-in-search",children:"Searchable with description (included in search)"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable with description (included in search)",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithDescriptions,searchable:!0,includeDescriptionsInSearch:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-helper-text",children:"Searchable helper text"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable helper text",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,helperText:"Some helper text",onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-small",children:"Searchable small"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable small",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,size:"small",onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-disabled",children:"Searchable disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable disabled",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,disabled:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-disabled-options",children:"Searchable disabled options"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable disabled options",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithDisabled,searchable:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-hidden-label",children:"Searchable hidden label"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable hidden label",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,hideLabel:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-required",children:"Searchable required"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable required",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,required:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-groups",children:"Searchable groups"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable groups",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:groupedOptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-groups-group-titles-included-in-search",children:"Searchable groups (group titles included in search)"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable groups (group titles included in search)",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:groupedOptions,searchable:!0,includeGroupTitlesInSearch:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-recommended",children:"Searchable recommended"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable recommended",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithRecommended,searchable:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-validation",children:"Searchable validation"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable validation",children:()=>(0,jsx_runtime.jsxs)(_components.div,{children:[(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"success",validationText:"Success message",options,searchable:!0,onIcChange:event=>setValue1(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"warning",validationText:"Warning message",options,searchable:!0,onIcChange:event=>setValue2(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"error",validationText:"Error message",options,searchable:!0,onIcChange:event=>setValue3(event.detail.value)})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-many-options",children:"Searchable many options"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable many options",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:manyOptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-external-filtering",children:"Searchable external filtering"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsxs)(dist.gG,{name:"Searchable external filtering",children:[(0,jsx_runtime.jsx)(ExternalFiltering,{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)(_components.p,{children:"Suggested search options: Espresso, Double Espresso, Flat White, Filter,\nCappuccino, Americano, Mocha, Macchiato."})}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)(_components.p,{children:"The IcChange event will trigger 300ms after you finish typing. 1 second\nlater, the options in the select menu will be updated."})})]})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-emitting-icoptionselect-on-enter",children:"Searchable emitting icOptionSelect on enter"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable emitting icOptionSelect on enter",children:()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,selectOnEnter:!0,searchable:!0,onIcOptionSelect:event=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default-select-playground",children:"Default select playground"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default select playground",args:{...defaultArgs,showClearButton:!1},argTypes:{validationStatus:{options:["none","error","success","warning"],control:{type:"inline-radio"}}},children:args=>(0,jsx_runtime.jsx)(components.xO,{id:"select-playground",options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,showClearButton:args.showClearButton,small:args.small,validationStatus:args.validationStatus,validationText:args.validationText})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"searchable-select-playground",children:"Searchable select playground"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Searchable select playground",args:{...defaultArgs,includeDescriptionsInSearch:!1,includeGroupTitlesInSearch:!1,searchMatchPosition:"anywhere"},argTypes:{searchMatchPosition:{options:["anywhere","start"],control:{type:"inline-radio"}},validationStatus:{options:["none","error","success","warning"],control:{type:"inline-radio"}}},children:args=>(0,jsx_runtime.jsx)(components.xO,{id:"select-searchable-playground",options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,includeDescriptionsInSearch:args.includeDescriptionsInSearch,includeGroupTitlesInSearch:args.includeGroupTitlesInSearch,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,searchMatchPosition:args.searchMatchPosition,searchable:!0,small:args.small,validationStatus:args.validationStatus,validationText:args.validationText})})})]})}const defaultStory=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,onIcChange:event=>console.log(event.detail.value)});defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const defaultValue=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,onIcChange:event=>console.log(event.detail.value)});defaultValue.storyName="Default value",defaultValue.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const withClearButton=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",showClearButton:!0,options,onIcChange:event=>console.log(event.detail.value)});withClearButton.storyName="With clear button",withClearButton.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" showClearButton options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const withDescription=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithDescriptions,onIcChange:event=>console.log(event.detail.value)});withDescription.storyName="With description",withDescription.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={optionsWithDescriptions} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const helperText=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",helperText:"Some helper text",options,onIcChange:event=>console.log(event.detail.value)});helperText.storyName="Helper text",helperText.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" helperText="Some helper text" options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const customPlaceholder=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",placeholder:"Placeholder goes here",options,onIcChange:event=>console.log(event.detail.value)});customPlaceholder.storyName="Custom placeholder",customPlaceholder.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" placeholder="Placeholder goes here" options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const customElements=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithCustomElements,onIcChange:event=>console.log(event.detail.value)});customElements.storyName="Custom elements",customElements.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={optionsWithCustomElements} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const sizeSmall=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",size:"small",options,onIcChange:event=>console.log(event.detail.value)});sizeSmall.storyName="Size small",sizeSmall.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" size="small" options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const deprecatedSmall=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",small:!0,options,onIcChange:event=>console.log(event.detail.value)});deprecatedSmall.storyName="Deprecated - small",deprecatedSmall.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" small options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const disabled=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",disabled:!0,options,onIcChange:event=>console.log(event.detail.value)});disabled.storyName="Disabled",disabled.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" disabled options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const disabledOptions=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithDisabled,onIcChange:event=>console.log(event.detail.value)});disabledOptions.storyName="Disabled options",disabledOptions.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={optionsWithDisabled} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const fullWidth=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",fullWidth:!0,options,onIcChange:event=>console.log(event.detail.value)});fullWidth.storyName="Full width",fullWidth.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" fullWidth options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const hiddenLabel=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",hideLabel:!0,options,onIcChange:event=>console.log(event.detail.value)});hiddenLabel.storyName="Hidden label",hiddenLabel.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" hideLabel options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const required=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",required:!0,options,onIcChange:event=>console.log(event.detail.value)});required.storyName="Required",required.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" required options={options} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const readOnly=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",readonly:!0,options,value:"Cap",onIcChange:event=>console.log(event.detail.value)});readOnly.storyName="Read-only",readOnly.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" readonly options={options} value="Cap" onIcChange={event => console.log(event.detail.value)} />;\n}'}};const groups=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:groupedOptions,onIcChange:event=>console.log(event.detail.value)});groups.storyName="Groups",groups.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={groupedOptions} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const recommended=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:optionsWithRecommended,onIcChange:event=>console.log(event.detail.value)});recommended.storyName="Recommended",recommended.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={optionsWithRecommended} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const validation=()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"success",validationText:"Success message",options,onIcChange:event=>setValue1(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"warning",validationText:"Warning message",options,onIcChange:event=>setValue2(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"error",validationText:"Error message",options,onIcChange:event=>setValue3(event.detail.value)})]});validation.storyName="Validation",validation.parameters={storySource:{source:'() => {\n  return <div>\n          <IcSelect label="What is your favourite coffee?" validationStatus="success" validationText="Success message" options={options} onIcChange={event => setValue1(event.detail.value)} />\n          <IcSelect label="What is your favourite coffee?" validationStatus="warning" validationText="Warning message" options={options} onIcChange={event => setValue2(event.detail.value)} />\n          <IcSelect label="What is your favourite coffee?" validationStatus="error" validationText="Error message" options={options} onIcChange={event => setValue3(event.detail.value)} />\n        </div>;\n}'}};const scrollBehaviour=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:manyOptions,onIcChange:event=>console.log(event.detail.value)});scrollBehaviour.storyName="Scroll behaviour",scrollBehaviour.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={manyOptions} onIcChange={event => console.log(event.detail.value)} />;\n}'}};const emittingIcOptionSelectOnEnter=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,selectOnEnter:!0,onIcOptionSelect:event=>console.log(event.detail.value)});emittingIcOptionSelectOnEnter.storyName="Emitting icOptionSelect on enter",emittingIcOptionSelectOnEnter.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={options} selectOnEnter onIcOptionSelect={event => console.log(event.detail.value)} />;\n}'}};const searchableDefault=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)});searchableDefault.storyName="Searchable default",searchableDefault.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableDefaultValue=()=>(0,jsx_runtime.jsx)(SearchableDefaultValue,{});searchableDefaultValue.storyName="Searchable default value",searchableDefaultValue.parameters={storySource:{source:"() => {\n  return <SearchableDefaultValue />;\n}"}};const searchableFormResetDefaultValue=()=>(0,jsx_runtime.jsx)(SearchableFormDefaultValue,{});searchableFormResetDefaultValue.storyName="Searchable form reset default value",searchableFormResetDefaultValue.parameters={storySource:{source:"() => {\n  return <SearchableFormDefaultValue />;\n}"}};const searchableFilterByStartOfOptions=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,filterMatchPosition:"start",onIcChange:event=>console.log(event.detail.value)});searchableFilterByStartOfOptions.storyName="Searchable filter by start of options",searchableFilterByStartOfOptions.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable filterMatchPosition="start" onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableWithDescription=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithDescriptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)});searchableWithDescription.storyName="Searchable with description",searchableWithDescription.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptionsWithDescriptions} searchable onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableWithDescriptionIncludedInSearch=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithDescriptions,searchable:!0,includeDescriptionsInSearch:!0,onIcChange:event=>console.log(event.detail.value)});searchableWithDescriptionIncludedInSearch.storyName="Searchable with description (included in search)",searchableWithDescriptionIncludedInSearch.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptionsWithDescriptions} searchable includeDescriptionsInSearch onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableHelperText=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,helperText:"Some helper text",onIcChange:event=>console.log(event.detail.value)});searchableHelperText.storyName="Searchable helper text",searchableHelperText.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable helperText="Some helper text" onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableSmall=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,size:"small",onIcChange:event=>console.log(event.detail.value)});searchableSmall.storyName="Searchable small",searchableSmall.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable size="small" onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableDisabled=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,disabled:!0,onIcChange:event=>console.log(event.detail.value)});searchableDisabled.storyName="Searchable disabled",searchableDisabled.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable disabled onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableDisabledOptions=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithDisabled,searchable:!0,onIcChange:event=>console.log(event.detail.value)});searchableDisabledOptions.storyName="Searchable disabled options",searchableDisabledOptions.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptionsWithDisabled} searchable onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableHiddenLabel=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,hideLabel:!0,onIcChange:event=>console.log(event.detail.value)});searchableHiddenLabel.storyName="Searchable hidden label",searchableHiddenLabel.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable hideLabel onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableRequired=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptions,searchable:!0,required:!0,onIcChange:event=>console.log(event.detail.value)});searchableRequired.storyName="Searchable required",searchableRequired.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptions} searchable required onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableGroups=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:groupedOptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)});searchableGroups.storyName="Searchable groups",searchableGroups.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={groupedOptions} searchable onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableGroupsGroupTitlesIncludedInSearch=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:groupedOptions,searchable:!0,includeGroupTitlesInSearch:!0,onIcChange:event=>console.log(event.detail.value)});searchableGroupsGroupTitlesIncludedInSearch.storyName="Searchable groups (group titles included in search)",searchableGroupsGroupTitlesIncludedInSearch.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={groupedOptions} searchable includeGroupTitlesInSearch onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableRecommended=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:searchableOptionsWithRecommended,searchable:!0,onIcChange:event=>console.log(event.detail.value)});searchableRecommended.storyName="Searchable recommended",searchableRecommended.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={searchableOptionsWithRecommended} searchable onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableValidation=()=>(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"success",validationText:"Success message",options,searchable:!0,onIcChange:event=>setValue1(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"warning",validationText:"Warning message",options,searchable:!0,onIcChange:event=>setValue2(event.detail.value)}),(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",validationStatus:"error",validationText:"Error message",options,searchable:!0,onIcChange:event=>setValue3(event.detail.value)})]});searchableValidation.storyName="Searchable validation",searchableValidation.parameters={storySource:{source:'() => {\n  return <div>\n          <IcSelect label="What is your favourite coffee?" validationStatus="success" validationText="Success message" options={options} searchable onIcChange={event => setValue1(event.detail.value)} />\n          <IcSelect label="What is your favourite coffee?" validationStatus="warning" validationText="Warning message" options={options} searchable onIcChange={event => setValue2(event.detail.value)} />\n          <IcSelect label="What is your favourite coffee?" validationStatus="error" validationText="Error message" options={options} searchable onIcChange={event => setValue3(event.detail.value)} />\n        </div>;\n}'}};const searchableManyOptions=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options:manyOptions,searchable:!0,onIcChange:event=>console.log(event.detail.value)});searchableManyOptions.storyName="Searchable many options",searchableManyOptions.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={manyOptions} searchable onIcChange={event => console.log(event.detail.value)} />;\n}'}};const searchableExternalFiltering=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ExternalFiltering,{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)("p",{children:"Suggested search options: Espresso, Double Espresso, Flat White, Filter,\nCappuccino, Americano, Mocha, Macchiato."})}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)("p",{children:"The IcChange event will trigger 300ms after you finish typing. 1 second\nlater, the options in the select menu will be updated."})})]});searchableExternalFiltering.storyName="Searchable external filtering",searchableExternalFiltering.parameters={storySource:{source:'<ExternalFiltering />\n<br />\n<IcTypography><p>{"Suggested search options: Espresso, Double Espresso, Flat White, Filter,\\nCappuccino, Americano, Mocha, Macchiato."}</p></IcTypography>\n<br />\n<IcTypography><p>{"The IcChange event will trigger 300ms after you finish typing. 1 second\\nlater, the options in the select menu will be updated."}</p></IcTypography>'}};const searchableEmittingIcOptionSelectOnEnter=()=>(0,jsx_runtime.jsx)(components.xO,{label:"What is your favourite coffee?",options,selectOnEnter:!0,searchable:!0,onIcOptionSelect:event=>console.log(event.detail.value)});searchableEmittingIcOptionSelectOnEnter.storyName="Searchable emitting icOptionSelect on enter",searchableEmittingIcOptionSelectOnEnter.parameters={storySource:{source:'() => {\n  return <IcSelect label="What is your favourite coffee?" options={options} selectOnEnter searchable onIcOptionSelect={event => console.log(event.detail.value)} />;\n}'}};const defaultSelectPlayground=args=>(0,jsx_runtime.jsx)(components.xO,{id:"select-playground",options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,showClearButton:args.showClearButton,small:args.small,validationStatus:args.validationStatus,validationText:args.validationText});defaultSelectPlayground.storyName="Default select playground",defaultSelectPlayground.argTypes={validationStatus:{options:["none","error","success","warning"],control:{type:"inline-radio"}}},defaultSelectPlayground.args={...defaultArgs,showClearButton:!1},defaultSelectPlayground.parameters={storySource:{source:'args => <IcSelect id="select-playground" options={playgroundOptions} disabled={args.disabled} fullWidth={args.fullWidth} helperText={args.helperText} hideLabel={args.hideLabel} loading={args.loading} loadingLabel={args.loadingLabel} label={args.label} placeholder={args.placeholder} readonly={args.readonly} required={args.required} showClearButton={args.showClearButton} small={args.small} validationStatus={args.validationStatus} validationText={args.validationText} />'}};const searchableSelectPlayground=args=>(0,jsx_runtime.jsx)(components.xO,{id:"select-searchable-playground",options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,includeDescriptionsInSearch:args.includeDescriptionsInSearch,includeGroupTitlesInSearch:args.includeGroupTitlesInSearch,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,searchMatchPosition:args.searchMatchPosition,searchable:!0,small:args.small,validationStatus:args.validationStatus,validationText:args.validationText});searchableSelectPlayground.storyName="Searchable select playground",searchableSelectPlayground.argTypes={searchMatchPosition:{options:["anywhere","start"],control:{type:"inline-radio"}},validationStatus:{options:["none","error","success","warning"],control:{type:"inline-radio"}}},searchableSelectPlayground.args={...defaultArgs,includeDescriptionsInSearch:!1,includeGroupTitlesInSearch:!1,searchMatchPosition:"anywhere"},searchableSelectPlayground.parameters={storySource:{source:'args => <IcSelect id="select-searchable-playground" options={playgroundOptions} disabled={args.disabled} fullWidth={args.fullWidth} helperText={args.helperText} hideLabel={args.hideLabel} includeDescriptionsInSearch={args.includeDescriptionsInSearch} includeGroupTitlesInSearch={args.includeGroupTitlesInSearch} loading={args.loading} loadingLabel={args.loadingLabel} label={args.label} placeholder={args.placeholder} readonly={args.readonly} required={args.required} searchMatchPosition={args.searchMatchPosition} searchable small={args.small} validationStatus={args.validationStatus} validationText={args.validationText} />'}};const componentMeta={title:"Select",component:components.xO,tags:["stories-mdx"],includeStories:["defaultStory","defaultValue","withClearButton","withDescription","helperText","customPlaceholder","customElements","sizeSmall","deprecatedSmall","disabled","disabledOptions","fullWidth","hiddenLabel","required","readOnly","groups","recommended","validation","scrollBehaviour","emittingIcOptionSelectOnEnter","searchableDefault","searchableDefaultValue","searchableFormResetDefaultValue","searchableFilterByStartOfOptions","searchableWithDescription","searchableWithDescriptionIncludedInSearch","searchableHelperText","searchableSmall","searchableDisabled","searchableDisabledOptions","searchableHiddenLabel","searchableRequired","searchableGroups","searchableGroupsGroupTitlesIncludedInSearch","searchableRecommended","searchableValidation","searchableManyOptions","searchableExternalFiltering","searchableEmittingIcOptionSelectOnEnter","defaultSelectPlayground","searchableSelectPlayground"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_select_stories=componentMeta,__namedExportsOrder=["defaultArgs","options","optionsWithDisabled","optionsWithDescriptions","groupedOptions","optionsWithRecommended","optionsWithCustomElements","manyOptions","searchableOptions","searchableOptionsWithDescriptions","searchableOptionsWithDisabled","searchableOptionsWithRecommended","playgroundOptions","SearchableDefaultValue","SearchableFormDefaultValue","ExternalFiltering","defaultStory","defaultValue","withClearButton","withDescription","helperText","customPlaceholder","customElements","sizeSmall","deprecatedSmall","disabled","disabledOptions","fullWidth","hiddenLabel","required","readOnly","groups","recommended","validation","scrollBehaviour","emittingIcOptionSelectOnEnter","searchableDefault","searchableDefaultValue","searchableFormResetDefaultValue","searchableFilterByStartOfOptions","searchableWithDescription","searchableWithDescriptionIncludedInSearch","searchableHelperText","searchableSmall","searchableDisabled","searchableDisabledOptions","searchableHiddenLabel","searchableRequired","searchableGroups","searchableGroupsGroupTitlesIncludedInSearch","searchableRecommended","searchableValidation","searchableManyOptions","searchableExternalFiltering","searchableEmittingIcOptionSelectOnEnter","defaultSelectPlayground","searchableSelectPlayground"]}}]);