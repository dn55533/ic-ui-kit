"use strict";(self.webpackChunk_ukic_canary_react=self.webpackChunk_ukic_canary_react||[]).push([[3108],{"./src/stories/ic-date-input.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClearDateInput:()=>ClearDateInput,Form:()=>Form,UpdatingHelperText:()=>UpdatingHelperText,__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,customHelperText:()=>customHelperText,customValidation:()=>customValidation,dateObject:()=>dateObject,default:()=>ic_date_input_stories,disabled:()=>disabled,disabledFutureDates:()=>disabledFutureDates,disabledPastDates:()=>disabledPastDates,epochTime:()=>epochTime,form:()=>ic_date_input_stories_form,minAndMax:()=>minAndMax,onIcChangeEvent:()=>onIcChangeEvent,required:()=>required,sizes:()=>sizes,withClearingValue:()=>withClearingValue,withHyphens:()=>withHyphens,withValue:()=>withValue,zuluDatetime:()=>zuluDatetime});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),components=__webpack_require__("./src/components.ts"),dist_components=__webpack_require__("../react/dist/components.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const UpdatingHelperText=()=>{const _components=Object.assign({br:"br",div:"div"},(0,lib.ah)()),[helpText,setHelpText]=(0,react.useState)("We will have your order ready for you on this date");return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",helperText:helpText}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsxs)(_components.div,{style:{display:"flex",gap:"8px"},children:[(0,jsx_runtime.jsx)(dist_components.$Z,{onClick:()=>{setHelpText("this is the new helper text")},children:"Set helper text"}),(0,jsx_runtime.jsx)(dist_components.$Z,{onClick:value=>{setHelpText("")},children:"Clear helper text"})]})]})},Form=()=>{const _components=Object.assign({form:"form"},(0,lib.ah)());return(0,jsx_runtime.jsxs)(_components.form,{onSubmit:e=>{console.log(e)},children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:new Date("13 March 1951")}),(0,jsx_runtime.jsx)(dist_components.$Z,{type:"submit",children:"Submit"}),(0,jsx_runtime.jsx)(dist_components.$Z,{type:"reset",children:"Reset"})]})},ClearDateInput=()=>{const _components=Object.assign({br:"br",div:"div"},(0,lib.ah)()),[value,setValue]=(0,react.useState)("21/01/2001"),handleClearValue=value=>{setValue(value)};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsxs)(_components.div,{style:{display:"flex",gap:"8px"},children:[(0,jsx_runtime.jsx)(dist_components.$Z,{onClick:()=>{setValue(new Date("05 May 2005"))},children:"Update date"}),(0,jsx_runtime.jsx)(dist_components.$Z,{onClick:()=>handleClearValue(null),children:"Set null"}),(0,jsx_runtime.jsx)(dist_components.$Z,{onClick:()=>handleClearValue(""),children:"Set Empty String"}),(0,jsx_runtime.jsx)(dist_components.$Z,{onClick:()=>handleClearValue(void 0),children:"Set undefined"})]})]})};function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",code:"code",h3:"h3",ul:"ul",li:"li",pre:"pre",a:"a",h4:"h4"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"React Components/Date Input",component:components.eb}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"canary-date-input",children:"[Canary]: Date Input"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the date input component to manually type in a date in different formats."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The input ",(0,jsx_runtime.jsx)(_components.code,{children:"label"})," is the only required prop for date input."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Click the 'Component API' tab to view all the available props, events and slots for date input."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To use the date input component, import ",(0,jsx_runtime.jsx)(_components.code,{children:"@ukic/canary-react"})," into your application."]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"basic",children:"Basic"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Each example below demonstrates the date input in three different date formats:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"DD/MM/YYYY (Default date format)"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"MM/DD/YYYY"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"YYYY/MM/DD"}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Dates can be added by manually typing into the input or using the up and down arrow keys."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To move between day, month and year using the keyboard, provide the required values based on the placeholders or use ",(0,jsx_runtime.jsx)(_components.code,{children:"/"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"-"}),"."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"By default, the helper text displays the date format."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsxs)(dist.oG,{name:"Basic",children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",onIcChange:ev=>console.log(event.detail.value)}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",dateFormat:"MM/DD/YYYY"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",dateFormat:"YYYY/MM/DD"})]})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput label="When would you like to collect your coffee?" />\n\n<IcDateInput label="When would you like to collect your coffee?" dateFormat="MM/DD/YYYY" />\n\n<IcDateInput label="When would you like to collect your coffee?" dateFormat="YYYY/MM/DD" />\n'})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Retrieving the date input value via ",(0,jsx_runtime.jsx)(_components.code,{children:"onIcChange"})," returns the date as a Date object."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The event returns the Date object when day, month and year have been entered."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"onIcChange event",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",onIcChange:ev=>console.log(event.detail.value)})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  onIcChange={(ev) => console.log(event.detail.value)}\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-value",children:"With value"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"To set a value to the date input, pass the date value in the relevant date format."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"With value",parameters:{loki:{skip:!0}},children:(0,jsx_runtime.jsx)(components.eb,{id:"date-input-default-date-with-value",label:"When would you like to collect your coffee?",value:"21/01/2001"})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  value="21/01/2001"\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The date input also accepts a number of different date formats within the value prop."}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#date-object",children:"Date object"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#zulu-datetime",children:"Zulu datetime"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#with-hyphens",children:"With hyphens (DD-MM-YYYY)"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#epoch-time",children:"Epoch time"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"date-object",children:"Date object"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Date object",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:new Date("28 November 2021")})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  value={new Date("28 November 2021")}\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"zulu-datetime",children:"Zulu datetime"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Zulu datetime",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:new Date("28 November 2021").toISOString()})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  value={new Date("28 November 2021").toISOString()}\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"with-hyphens",children:"With hyphens"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"With hyphens",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:"25-05-2005"})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  value="25-05-2005"\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"epoch-time",children:"Epoch time"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Epoch time",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:Date.now()})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  value={Date.now()}\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"required",children:"Required"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set the date input as a required field, add the ",(0,jsx_runtime.jsx)(_components.code,{children:"required"})," prop. This will add an asteriks at the end of the date input label."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Required",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",required:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'  <IcDateInput label="When would you like to collect your coffee?" required />\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Set the ",(0,jsx_runtime.jsx)(_components.code,{children:"disabled"}),", to prevent interaction with the date input."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",disabled:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput label="When would you like to collect your coffee?" disabled />\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sizes",children:"Sizes"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The date input is available in three different sizes:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"small"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"default"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"large"}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsxs)(dist.oG,{name:"Sizes",children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",size:"small"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",size:"large"})]})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput label="When would you like to collect your coffee?" size="small" />\n\n<IcDateInput label="When would you like to collect your coffee?" />\n\n<IcDateInput label="When would you like to collect your coffee?" size="large" />\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-helper-text",children:"Custom helper text"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the helper text to add additional detail for the date input."}),"\n","\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Custom Helper Text",children:(0,jsx_runtime.jsx)(UpdatingHelperText,{})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  helperText="We will have your order ready for you on this date"\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-validation",children:"Custom validation"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Validation on date input is set via ",(0,jsx_runtime.jsx)(_components.code,{children:"validationStatus"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"validationText"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"validationStatus"})," will set the style of the validation message. ",(0,jsx_runtime.jsx)(_components.code,{children:"validationStatus"})," accepts:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"error"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"warning"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"success"})}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"validationStatus"})," is required for the ",(0,jsx_runtime.jsx)(_components.code,{children:"validationText"})," to appear."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsxs)(dist.oG,{name:"Custom validation",children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",validationStatus:"error",validationText:"There is a coffee shortage forecast for that day. Please choose a different date."}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",validationStatus:"warning",validationText:"Please be aware that there may be a coffee shortage on that day."}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",validationStatus:"success",validationText:"Your coffee will be available for you to collect on this day."}),(0,jsx_runtime.jsx)("br",{})]})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  validationStatus="error"\n  validationText="There is a coffee shortage forecast for that day. Please choose a different date."\n/>\n\n<IcDateInput\n  label="When would you like to collect your coffee?"\n  validationStatus="warning"\n  validationText="Please be aware that there may be a coffee shortage on that day."\n/>\n\n<IcDateInput\n  label="When would you like to collect your coffee?"\n  validationStatus="success"\n  validationText="Your coffee will be available for you to collect on this day."\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled-past-dates",children:"Disabled past dates"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Validation can be set on the date input if a date in the past has been set by setting the ",(0,jsx_runtime.jsx)(_components.code,{children:"disablePast"})," prop."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Enter a date in the past to view the validation message."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled past dates",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",disablePast:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  disablePast\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled-future-dates",children:"Disabled future dates"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Validation can be set on the date input if a date in the future has been set by setting the ",(0,jsx_runtime.jsx)(_components.code,{children:"disableFuture"})," prop."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Enter a date in the future to view the validation message."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled future dates",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",disableFuture:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  disableFuture\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"min-and-max",children:"Min and max"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"It is possible to set a min and max date range. If a date is set and it is before the min or after the max date, a validation error will appear."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The min or max dates accept the following date formats:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"#with-value",children:"Date string"})," (with slashes i.e. DD/MM/YYYY)"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.a,{href:"#with-hyphens",children:"Date string"})," (with hyphens i.e. DD-MM-YYYY)"]}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#date-object",children:"Date object"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.a,{href:"#zulu-time",children:"Zulu time"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Enter a date after 2nd Jan 2023 and before 20th July to view the validation message."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Min and max",children:(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",min:"02-01-2023",max:"20/07/2023"})})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"In this code snippet, the min and max have been set using two different date formats to demonstrate its flexibility."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'<IcDateInput\n  label="When would you like to collect your coffee?"\n  min="02-01-2023"\n  max="20/07/2023"\n/>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"form",children:"Form"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"When the date input component is used within a form, the date value is returned as an ISO string."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The value is console logged to the browser dev tools."}),"\n","\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'  const formSubmit = (e) => {\n    console.log(e);\n  };\n\n  <form onSubmit={formSubmit}>\n    <IcDateInput\n      label="When would you like to collect your coffee?"\n      value={new Date("13 March 1951")}\n    />\n    <IcButton type="submit">Submit</IcButton>\n    <IcButton type="reset">Reset</IcButton>\n  </form>\n'})}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Form",parameters:{loki:{skip:!0}},children:(0,jsx_runtime.jsx)(Form,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-clearing-value",children:"With clearing value"}),"\n","\n",(0,jsx_runtime.jsx)(_components.p,{children:"The date input can be cleared by setting the the value attribute to one of the following:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"empty string"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"null"})}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:(0,jsx_runtime.jsx)(_components.code,{children:"undefined"})}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"With clearing value",parameters:{loki:{skip:!0}},children:(0,jsx_runtime.jsx)(ClearDateInput,{})})})]})}const basic=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",onIcChange:ev=>console.log(event.detail.value)}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",dateFormat:"MM/DD/YYYY"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",dateFormat:"YYYY/MM/DD"})]});basic.storyName="Basic",basic.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" onIcChange={ev => console.log(event.detail.value)} />\n<br />\n<IcDateInput label="When would you like to collect your coffee?" dateFormat="MM/DD/YYYY" />\n<br />\n<IcDateInput label="When would you like to collect your coffee?" dateFormat="YYYY/MM/DD" />'}};const onIcChangeEvent=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",onIcChange:ev=>console.log(event.detail.value)});onIcChangeEvent.storyName="onIcChange event",onIcChangeEvent.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" onIcChange={ev => console.log(event.detail.value)} />'}};const withValue=()=>(0,jsx_runtime.jsx)(components.eb,{id:"date-input-default-date-with-value",label:"When would you like to collect your coffee?",value:"21/01/2001"});withValue.storyName="With value",withValue.parameters={storySource:{source:'<IcDateInput id="date-input-default-date-with-value" label="When would you like to collect your coffee?" value="21/01/2001" />'},loki:{skip:!0}};const dateObject=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:new Date("28 November 2021")});dateObject.storyName="Date object",dateObject.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" value={new Date("28 November 2021")} />'}};const zuluDatetime=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:new Date("28 November 2021").toISOString()});zuluDatetime.storyName="Zulu datetime",zuluDatetime.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" value={new Date("28 November 2021").toISOString()} />'}};const withHyphens=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:"25-05-2005"});withHyphens.storyName="With hyphens",withHyphens.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" value="25-05-2005" />'}};const epochTime=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",value:Date.now()});epochTime.storyName="Epoch time",epochTime.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" value={Date.now()} />'}};const required=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",required:!0});required.storyName="Required",required.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" required />'}};const disabled=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",disabled:!0});disabled.storyName="Disabled",disabled.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" disabled />'}};const sizes=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",size:"small"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?"}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",size:"large"})]});sizes.storyName="Sizes",sizes.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" size="small" />\n<br />\n<IcDateInput label="When would you like to collect your coffee?" />\n<br />\n<IcDateInput label="When would you like to collect your coffee?" size="large" />'}};const customHelperText=()=>(0,jsx_runtime.jsx)(UpdatingHelperText,{});customHelperText.storyName="Custom Helper Text",customHelperText.parameters={storySource:{source:"<UpdatingHelperText />"}};const customValidation=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",validationStatus:"error",validationText:"There is a coffee shortage forecast for that day. Please choose a different date."}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",validationStatus:"warning",validationText:"Please be aware that there may be a coffee shortage on that day."}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",validationStatus:"success",validationText:"Your coffee will be available for you to collect on this day."}),(0,jsx_runtime.jsx)("br",{})]});customValidation.storyName="Custom validation",customValidation.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" validationStatus="error" validationText="There is a coffee shortage forecast for that day. Please choose a different date." />\n<br />\n<IcDateInput label="When would you like to collect your coffee?" validationStatus="warning" validationText="Please be aware that there may be a coffee shortage on that day." />\n<br />\n<IcDateInput label="When would you like to collect your coffee?" validationStatus="success" validationText="Your coffee will be available for you to collect on this day." />\n<br />'}};const disabledPastDates=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",disablePast:!0});disabledPastDates.storyName="Disabled past dates",disabledPastDates.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" disablePast />'}};const disabledFutureDates=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",disableFuture:!0});disabledFutureDates.storyName="Disabled future dates",disabledFutureDates.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" disableFuture />'}};const minAndMax=()=>(0,jsx_runtime.jsx)(components.eb,{label:"When would you like to collect your coffee?",min:"02-01-2023",max:"20/07/2023"});minAndMax.storyName="Min and max",minAndMax.parameters={storySource:{source:'<IcDateInput label="When would you like to collect your coffee?" min="02-01-2023" max="20/07/2023" />'}};const ic_date_input_stories_form=()=>(0,jsx_runtime.jsx)(Form,{});ic_date_input_stories_form.storyName="Form",ic_date_input_stories_form.parameters={storySource:{source:"<Form />"},loki:{skip:!0}};const withClearingValue=()=>(0,jsx_runtime.jsx)(ClearDateInput,{});withClearingValue.storyName="With clearing value",withClearingValue.parameters={storySource:{source:"<ClearDateInput />"},loki:{skip:!0}};const componentMeta={title:"React Components/Date Input",component:components.eb,tags:["stories-mdx"],includeStories:["basic","onIcChangeEvent","withValue","dateObject","zuluDatetime","withHyphens","epochTime","required","disabled","sizes","customHelperText","customValidation","disabledPastDates","disabledFutureDates","minAndMax","form","withClearingValue"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_date_input_stories=componentMeta,__namedExportsOrder=["UpdatingHelperText","Form","ClearDateInput","basic","onIcChangeEvent","withValue","dateObject","zuluDatetime","withHyphens","epochTime","required","disabled","sizes","customHelperText","customValidation","disabledPastDates","disabledFutureDates","minAndMax","form","withClearingValue"]}}]);