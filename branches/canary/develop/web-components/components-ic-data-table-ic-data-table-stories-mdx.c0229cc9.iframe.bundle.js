/*! For license information please see components-ic-data-table-ic-data-table-stories-mdx.c0229cc9.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_ukic_canary_web_components=self.webpackChunk_ukic_canary_web_components||[]).push([[5785],{"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Xz,h_:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.h_,oG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.oG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/ic-data-table/ic-data-table.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,cellOverrides:()=>cellOverrides,columnOverrides:()=>columnOverrides,default:()=>ic_data_table_stories,dense:()=>dense,embedded:()=>embedded,pagination:()=>pagination,rowHeaders:()=>rowHeaders,rowOverrides:()=>rowOverrides,sort:()=>sort,sortOptions:()=>sortOptions,spacious:()=>spacious,stickyColumnHeaders:()=>stickyColumnHeaders});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");const ROW_HEADER_TITLES=["Employee","Employee","Manager","Employee","Apprentice"],COLS=[{key:"firstName",title:"First name",dataType:"string"},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],COLS_ALIGNMENT=[{key:"firstName",title:"First name",dataType:"string",columnAlignment:{horizontal:"center",vertical:"middle"}},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],DATA=[{firstName:"Joe",lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Analyst",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Developer",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],DATA_CELL_ALIGNMENT=[{firstName:{data:"Joe",cellAlignment:{horizontal:"center",vertical:"middle"},emphasis:"high"},lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Analyst",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Developer",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],ROW_ALIGNMENT=[{header:{title:ROW_HEADER_TITLES[0],rowAlignment:"middle",emphasis:"high"},firstName:"Joe",lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{header:{title:ROW_HEADER_TITLES[1]},firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Analyst",address:"2 Main Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[2]},firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[3]},firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Developer",address:"8 Side Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[4]},firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],LONG_COLS=[{key:"employeeNumber",title:"Employee number",dataType:"number",columnAlignment:{horizontal:"left"}},{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],LONG_DATA=[{employeeNumber:1,name:"Joe Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{employeeNumber:2,name:"Sarah Jones",age:28,jobTitle:"Developer",address:"2 Main Street, Town, Country, Postcode"},{employeeNumber:3,name:"Mark Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, County, Postcode"},{employeeNumber:4,name:"Naomi Thomas",age:32,jobTitle:"Developer",address:"8 Side Street, Town, Country, Postcode"},{employeeNumber:5,name:"Luke Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"},{employeeNumber:6,name:"Dave Smith",age:33,jobTitle:"Analyst",address:"4 Extra Street, Town, County, Postcode"},{employeeNumber:7,name:"Amy Fox",age:27,jobTitle:"Analyst",address:"3 Main Street, Town, Country, Postcode"},{employeeNumber:8,name:"Mary Cooper",age:31,jobTitle:"Developer",address:"8 Main Street, Town, County, Postcode"},{employeeNumber:9,name:"Alice Cole",age:38,jobTitle:"Team Lead",address:"10 High Street, Town, Country, Postcode"},{employeeNumber:10,name:"Ben Fields",age:40,jobTitle:"Team Lead",address:"14 High Street, Town, Country, Postcode"},{employeeNumber:11,name:"Pete Norton",age:32,jobTitle:"Analyst",address:"6 Key Street, Town, County, Postcode"},{employeeNumber:12,name:"Ashley Langford",age:29,jobTitle:"Developer",address:"7 Long Street, Town, Country, Postcode"},{employeeNumber:13,name:"Michael Hall",age:35,jobTitle:"Team Lead",address:"5 Long Street, Town, County, Postcode"},{employeeNumber:14,name:"David Frank",age:28,jobTitle:"Developer",address:"3 Side Street, Town, Country, Postcode"},{employeeNumber:15,name:"Mary Lincoln",age:23,jobTitle:"Developer",address:"10 Main Street, Town, Country, Postcode"},{employeeNumber:16,name:"Will Barns",age:36,jobTitle:"Analyst",address:"1 New Street, Town, County, Postcode"},{employeeNumber:17,name:"Elizabeth Long",age:43,jobTitle:"Analyst",address:"9 Short Street, Town, Country, Postcode"},{employeeNumber:18,name:"Keith Jones",age:37,jobTitle:"Developer",address:"11 Main Street, Town, County, Postcode"},{employeeNumber:19,name:"Olivia Brown",age:19,jobTitle:"Trainee Analyst",address:"4 Side Street, Town, Country, Postcode"},{employeeNumber:20,name:"Tim Green",age:50,jobTitle:"Developer",address:"2 Long Street, Town, Country, Postcode"}],ROW_HEADER_COLS=[{key:"header",title:"Job type",dataType:"string"},{key:"firstName",title:"First name",dataType:"string"},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],ROW_HEADER_DATA=DATA.map(((data,index)=>({header:{title:ROW_HEADER_TITLES[index]},...data}))),createDataTableElement=(caption,columns=COLS,data=DATA)=>{const dataTable=document.createElement("ic-data-table");return dataTable.setAttribute("caption",caption),dataTable.columns=columns,dataTable.data=data,dataTable},Basic=()=>createDataTableElement("Basic Table"),Embedded=()=>{const dataTable=createDataTableElement("Embedded Table");return dataTable.setAttribute("embedded","true"),dataTable},Dense=()=>{const dataTableDense=createDataTableElement("Dense Table");return dataTableDense.setAttribute("density","dense"),dataTableDense},Spacious=()=>{const dataTableSpacious=createDataTableElement("Spacious Table");return dataTableSpacious.setAttribute("density","spacious"),dataTableSpacious},Scrollable=()=>{const dataTable=createDataTableElement("Scrollable Table",LONG_COLS,LONG_DATA);dataTable.setAttribute("embedded","true"),dataTable.style.height="366px";const setStickyHeaders=sticky=>{dataTable.setAttribute("sticky-column-headers",`${sticky}`)},stickButton=document.createElement("ic-button"),unstickButton=document.createElement("ic-button");stickButton.innerHTML="Stick Header",unstickButton.innerHTML="Unstick Header",stickButton.addEventListener("click",(()=>setStickyHeaders(!0))),unstickButton.addEventListener("click",(()=>setStickyHeaders(!1)));const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",stickButton),buttonWrapper.insertAdjacentElement("beforeend",unstickButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper},RowHeaders=()=>createDataTableElement("Row Header Table",ROW_HEADER_COLS,ROW_HEADER_DATA),Sort=()=>{const dataTable=createDataTableElement("Sort",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable},SortOptions=()=>{const dataTable=createDataTableElement("Sort Order",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable.sortOptions={sortOrders:["descending","unsorted"],defaultColumn:"firstName"},dataTable},Pagination=()=>{const dataTable=createDataTableElement("Pagination",LONG_COLS,LONG_DATA);return dataTable.setAttribute("show-pagination","true"),dataTable.paginationOptions={itemsPerPage:[{label:"5",value:"5"},{label:"10",value:"10"},{label:"15",value:"15"}],itemsPerPageControl:!0,goToPageControl:!0},dataTable},ColumnOverrides=()=>createDataTableElement("Column Overides",COLS_ALIGNMENT,DATA),RowOverrides=()=>createDataTableElement("Row Overides",ROW_HEADER_COLS,ROW_ALIGNMENT),CellOverrides=()=>createDataTableElement("Cell Overides",COLS,DATA_CELL_ALIGNMENT),readme_namespaceObject='# ic-data-table\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property               | Attribute               | Description                                                                              | Type                                                                                                                                                                                                                        | Default                                                                                                                                                                                                                                                                   |\n| ---------------------- | ----------------------- | ---------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `caption` _(required)_ | `caption`               | The title for the table only visible to screen readers.                                  | `string`                                                                                                                                                                                                                    | `undefined`                                                                                                                                                                                                                                                               |\n| `columns` _(required)_ | --                      | The column headers for the table.                                                        | `IcDataTableColumnObject[]`                                                                                                                                                                                                 | `undefined`                                                                                                                                                                                                                                                               |\n| `data`                 | --                      | The row content for the table.                                                           | `{ [key: string]: any; }[]`                                                                                                                                                                                                 | `undefined`                                                                                                                                                                                                                                                               |\n| `density`              | `density`               | Set the density of the table including font and padding.                                 | `"default" \\| "dense" \\| "spacious"`                                                                                                                                                                                        | `"default"`                                                                                                                                                                                                                                                               |\n| `embedded`             | `embedded`              | Applies a border to the table container.                                                 | `boolean`                                                                                                                                                                                                                   | `false`                                                                                                                                                                                                                                                                   |\n| `hideColumnHeaders`    | `hide-column-headers`   | If `true`, column headers will not be visible.                                           | `boolean`                                                                                                                                                                                                                   | `false`                                                                                                                                                                                                                                                                   |\n| `paginationOptions`    | --                      | Sets the props for the pagination bar.                                                   | `{ itemsPerPage?: { label: string; value: string; }[]; type?: IcPaginationTypes; control?: IcPaginationControlTypes; itemsPerPageControl?: boolean; goToPageControl?: boolean; alignment?: IcPaginationAlignmentOptions; }` | `{     itemsPerPage: [       { label: "10", value: "10" },       { label: "25", value: "25" },       { label: "50", value: "50" },     ],     type: "page",     control: "simple",     itemsPerPageControl: true,     goToPageControl: true,     alignment: "right",   }` |\n| `showPagination`       | `show-pagination`       | If `true`, adds a pagination bar to the bottom of the table.                             | `boolean`                                                                                                                                                                                                                   | `false`                                                                                                                                                                                                                                                                   |\n| `sortOptions`          | --                      | Sets the order columns will be sorted in and allows for \'default\' sorts to be added.     | `{ sortOrders: IcDataTableSortOrderOptions[]; defaultColumn?: string; }`                                                                                                                                                    | `{     sortOrders: ["unsorted", "ascending", "descending"],     defaultColumn: "",   }`                                                                                                                                                                                   |\n| `sortable`             | `sortable`              | If `true`, allows table columns to be sorted using applied sort buttons.                 | `boolean`                                                                                                                                                                                                                   | `false`                                                                                                                                                                                                                                                                   |\n| `stickyColumnHeaders`  | `sticky-column-headers` | If `true`, column headers will remain at the top of the table when scrolling vertically. | `boolean`                                                                                                                                                                                                                   | `false`                                                                                                                                                                                                                                                                   |\n| `stickyRowHeaders`     | `sticky-row-headers`    | If `true`, row headers will remain to the left when scrolling horizontally.              | `boolean`                                                                                                                                                                                                                   | `false`                                                                                                                                                                                                                                                                   |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-typography\n- ic-link\n- ic-button\n- [ic-pagination-bar](../ic-pagination-bar)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-data-table --\x3e ic-typography\n  ic-data-table --\x3e ic-link\n  ic-data-table --\x3e ic-button\n  ic-data-table --\x3e ic-pagination-bar\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-pagination-bar --\x3e ic-typography\n  ic-pagination-bar --\x3e ic-select\n  ic-pagination-bar --\x3e ic-pagination\n  ic-pagination-bar --\x3e ic-tooltip\n  ic-pagination-bar --\x3e ic-text-field\n  ic-pagination-bar --\x3e ic-button\n  ic-select --\x3e ic-input-container\n  ic-select --\x3e ic-input-label\n  ic-select --\x3e ic-input-component-container\n  ic-select --\x3e ic-typography\n  ic-select --\x3e ic-button\n  ic-select --\x3e ic-menu\n  ic-select --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-menu --\x3e ic-loading-indicator\n  ic-menu --\x3e ic-typography\n  ic-menu --\x3e ic-button\n  ic-input-validation --\x3e ic-typography\n  ic-pagination --\x3e ic-button\n  ic-pagination --\x3e ic-pagination-item\n  ic-pagination-item --\x3e ic-typography\n  ic-text-field --\x3e ic-input-container\n  ic-text-field --\x3e ic-input-label\n  ic-text-field --\x3e ic-input-component-container\n  ic-text-field --\x3e ic-input-validation\n  ic-text-field --\x3e ic-typography\n  style ic-data-table fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",code:"code",h3:"h3",h4:"h4",pre:"pre",a:"a"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Web Components/Data Table",component:"ic-data-table",parameters:{componentAPI:{data:readme_namespaceObject}}}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"canary-data-table",children:"[Canary]: Data Table"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the data table component to display data in a tabular form."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"There are two required props for data table:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Caption: ",(0,jsx_runtime.jsx)(_components.code,{children:"string"})]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Columns: ",(0,jsx_runtime.jsx)(_components.code,{children:"IcDataTableColumnObject[]"})]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Click the 'Component API' tab to view all the available props, events and slots for data tables."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To use the data table component, import ",(0,jsx_runtime.jsx)(_components.code,{children:"@ukic/canary-web-components"})," into your application."]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"basic",children:"Basic"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"A basic example with no functionality."}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Basic",children:Basic()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"basic-code-example",children:"Basic code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Basic Table"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      // dataType types: "string" | "number" | "address" | "element" | "date";\n      dataType: "string",\n    },\n    {\n      key: "lastName",\n      title: "Last name",\n      dataType: "string",\n    },\n    {\n      key: "age",\n      title: "Age",\n      dataType: "number",\n    },\n    {\n      key: "jobTitle",\n      title: "Job title",\n      dataType: "string",\n    },\n    {\n      key: "address",\n      title: "Address",\n      dataType: "address",\n    },\n  ];\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    {\n      firstName: "Sarah",\n      lastName: "Smith",\n      age: 28,\n      jobTitle: "Analyst",\n      address: "2 Main Street, Town, Country, Postcode",\n    },\n    {\n      firstName: "Mark",\n      lastName: "Owens",\n      age: 45,\n      jobTitle: "Team Lead",\n      address: "12 Key Street, Town, Country, Postcode",\n    },\n    {\n      firstName: "Naomi",\n      lastName: "Thomas",\n      age: 32,\n      jobTitle: "Developer",\n      address: "8 Side Street, Town, Country, Postcode",\n    },\n    {\n      firstName: "Luke",\n      lastName: "Ashford",\n      age: 18,\n      jobTitle: "Junior Developer",\n      address: "5 New Street, Town, Country, Postcode",\n    },\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"embedded",children:"Embedded"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"embedded"})," boolean adds a border around the table so it can be added as a standalone table and is not required to stretch the full width of its parent container."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Embedded",children:Embedded()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"embedded-code-example",children:"Embedded code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Embedded Table"\n  embedded="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"density",children:"Density"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"density"})," variant provides three different styles for the data table."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"dense"})," reduces the padding and font size of the table cells to give the data a more dense style."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"default"})," provides a padding of ",(0,jsx_runtime.jsx)(_components.code,{children:"8px"})," which is the default spacing. This variant is seen in the first ",(0,jsx_runtime.jsx)(_components.a,{href:"#basic",children:"basic"})," example."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"spacious"})," gives the data table a more spacious look and feel by increasing the vertical padding as well as the font size."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dense",children:"Dense"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Dense",children:Dense()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"dense-code-example",children:"Dense code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Dense Table"\n  density="dense"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"spacious",children:"Spacious"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Spacious",children:Spacious()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"spacious-code-example",children:"Spacious code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Spacious Table"\n  density="spacious"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sticky-column-headers",children:"Sticky column headers"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["When a height for the data table is set, the scroll bar will appear to the right. However, by default, the column headers will move up and out of view making it difficult to understand what the data means.\nThis can be mitigated by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"sticky-column-headers"})," prop which takes a boolean. This can be toggled within the example below."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Sticky Column Headers",children:Scrollable()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sticky-column-headers-code-example",children:"Sticky column headers code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  style="height: 150px"\n  id="data-table"\n  caption="Sticky header Table"\n  sticky-column-headers="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"row-headers",children:"Row headers"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Row headers allow headings to be added to individual rows and styles them as column headings. The column collection includes an additional ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," key which aligns with the row headers. The structure of the ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," column is the same as the columns (i.e. key, title, dataType).\nThe data array includes an additional ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," key which takes an object. The title of the row header is set by passing ",(0,jsx_runtime.jsx)(_components.code,{children:"title"})," as the key and a value."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Row Headers",children:RowHeaders()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"row-headers-code-example",children:"Row headers code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Row headers"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "header",\n      title: "Job type",\n      dataType: "string",\n    },\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      // Each data row requires a \'header\' key/value pair like below `header: { title: \'Employee\' }`\n      header: { title: \'Employee\' },\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sort",children:"Sort"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Set ",(0,jsx_runtime.jsx)(_components.code,{children:"sortable"})," to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," to set the sort functionality on all columns. Sorting can be set to ",(0,jsx_runtime.jsx)(_components.code,{children:"unsorted"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"ascending"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"descending"})," by press the sort buttons next to the column heading."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Sort",children:Sort()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sort-code-example",children:"Sort code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Sort" sortable="true"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sort-options",children:"Sort options"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["It is possible to change the sort options for the sort buttons. The ",(0,jsx_runtime.jsx)(_components.code,{children:"sortOptions"})," prop takes an object with ",(0,jsx_runtime.jsx)(_components.code,{children:"sortOrders"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultColumn"}),". ",(0,jsx_runtime.jsx)(_components.code,{children:"sortOrders"})," allows the sort order to be amended as we all as remove a sort type. Such as changing the order to ",(0,jsx_runtime.jsx)(_components.code,{children:"descending"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"unsorted"})," and remove ",(0,jsx_runtime.jsx)(_components.code,{children:"ascending"}),". ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultColumn"})," sets which column is ordered by default. This is set by padding the column key as the ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultColumn"})," value."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Sort Options",children:SortOptions()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sort-options-code-example",children:"Sort options code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Sort Options"\n  sortable="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.sortOptions = {\n    sortOrders: [\'descending\', \'unsorted\'],\n    defaultColumn: \'firstName\'\n  };\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"pagination",children:"Pagination"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Pagination allows large data sets to be split into pages in order to make the data easier to digest. Setting ",(0,jsx_runtime.jsx)(_components.code,{children:"show-pagination"})," to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," will add the ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-pagination"})," component to the bottom of the table. There a several sub components within pagination which are set via the ",(0,jsx_runtime.jsx)(_components.code,{children:"paginationOptions"})," prop."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"itemsPerPage"})," allows customization on the number of items on each page. This requires a collection with ",(0,jsx_runtime.jsx)(_components.code,{children:"label"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"value"})," key pairs."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"itemsPerPageControl"})," shows or hides the ",(0,jsx_runtime.jsx)(_components.code,{children:"itemsPerPage"})," component using ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"false"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"goToPageControl"})," displays controls which allows jumping between pages in a non-linear approach."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Pagination",children:Pagination()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"pagination-code-example",children:"Pagination code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Pagination"\n  show-pagination="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.paginationOptions = {\n    itemsPerPage: [\n      { label: "5", value: "5" },\n      { label: "10", value: "10" },\n      { label: "15", value: "15" },\n    ],\n    itemsPerPageControl: true,\n    goToPageControl: true,\n  };\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"column-overrides",children:"Column overrides"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["There may be a requirement to style a column differently to the rest of the data to add emphasis. For example, centre align data within the 'first name' column. To do this, add ",(0,jsx_runtime.jsx)(_components.code,{children:"columnAlignment"})," to the column. ",(0,jsx_runtime.jsx)(_components.code,{children:"columnAlignment"})," takes an object which sets the ",(0,jsx_runtime.jsx)(_components.code,{children:"horizontal"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"vertical"})," property."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"horizontal"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"left"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"right"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"center"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"vertical"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"top"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"middle"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"bottom"}),"."]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"})," can be added to the column by setting ",(0,jsx_runtime.jsx)(_components.code,{children:"high"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"low"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Column Overrides",children:ColumnOverrides()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"column-overrides-code-example",children:"Column overrides code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Column Overrides"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n      columnAlignment: { horizontal: \'center\', vertical: \'middle\'},\n      emphasis: \'high\'\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"row-overrides",children:"Row overrides"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Row overrides allow styling to be applied at a row level and is set within the ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," object. The row overrides are used in conjunction with row headers. The following row overrides options apply:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"rowAlignment"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"left"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"right"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"center"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"high"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"low"}),"."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Row Overrides",children:RowOverrides()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"row-overrides-code-example",children:"Row overrides code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Row Overrides"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "header",\n      title: "Job type",\n      dataType: "string",\n    },\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      header: {\n        title: \'Employee\',\n        rowAlignment: \'middle\',\n        emphasis: \'high\'\n      }\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"cell-overrides",children:"Cell overrides"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Cell overrides allows styling to be applied at a cell level. The cell which requires an override accepts an object which requires ",(0,jsx_runtime.jsx)(_components.code,{children:"data"})," and can contain ",(0,jsx_runtime.jsx)(_components.code,{children:"cellAlignment"})," and/or ",(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"data"})," is the cell value."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"cellAlignment"})," accepts an object with the following key pairs:","\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"horizontal"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"left"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"right"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"center"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"vertical"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"top"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"middle"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"bottom"}),"."]}),"\n"]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"high"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"low"}),"."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.oG,{name:"Cell Overrides",children:CellOverrides()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"cell-overrides-code-example",children:"Cell overrides code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Cell Overrides"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      firstName: {\n        data: "Joe",\n        cellAlignment: { horizontal: "center", vertical: "middle" },\n        emphasis: "high",\n      },\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})})]})}const basic=()=>Basic();basic.storyName="Basic",basic.parameters={storySource:{source:"Basic()"}};const embedded=()=>Embedded();embedded.storyName="Embedded",embedded.parameters={storySource:{source:"Embedded()"}};const dense=()=>Dense();dense.storyName="Dense",dense.parameters={storySource:{source:"Dense()"}};const spacious=()=>Spacious();spacious.storyName="Spacious",spacious.parameters={storySource:{source:"Spacious()"}};const stickyColumnHeaders=()=>Scrollable();stickyColumnHeaders.storyName="Sticky Column Headers",stickyColumnHeaders.parameters={storySource:{source:"Scrollable()"}};const rowHeaders=()=>RowHeaders();rowHeaders.storyName="Row Headers",rowHeaders.parameters={storySource:{source:"RowHeaders()"}};const sort=()=>Sort();sort.storyName="Sort",sort.parameters={storySource:{source:"Sort()"}};const sortOptions=()=>SortOptions();sortOptions.storyName="Sort Options",sortOptions.parameters={storySource:{source:"SortOptions()"}};const pagination=()=>Pagination();pagination.storyName="Pagination",pagination.parameters={storySource:{source:"Pagination()"}};const columnOverrides=()=>ColumnOverrides();columnOverrides.storyName="Column Overrides",columnOverrides.parameters={storySource:{source:"ColumnOverrides()"}};const rowOverrides=()=>RowOverrides();rowOverrides.storyName="Row Overrides",rowOverrides.parameters={storySource:{source:"RowOverrides()"}};const cellOverrides=()=>CellOverrides();cellOverrides.storyName="Cell Overrides",cellOverrides.parameters={storySource:{source:"CellOverrides()"}};const componentMeta={title:"Web Components/Data Table",parameters:{componentAPI:{data:readme_namespaceObject}},tags:["stories-mdx"],includeStories:["basic","embedded","dense","spacious","stickyColumnHeaders","rowHeaders","sort","sortOptions","pagination","columnOverrides","rowOverrides","cellOverrides"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_data_table_stories=componentMeta,__namedExportsOrder=["basic","embedded","dense","spacious","stickyColumnHeaders","rowHeaders","sort","sortOptions","pagination","columnOverrides","rowOverrides","cellOverrides"]},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/object-assign/index.js");var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);